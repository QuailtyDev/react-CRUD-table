{"ast":null,"code":"var _jsxFileName = \"/media/ted/New Volume1/react exercise/react-full-table-functionality/full-react-table-functionality/src/components/Pagination.js\";\nimport { useEffect } from \"react\";\nimport React, { useState, useContext } from 'react';\nimport { AppContext } from \"./Context\";\nexport default function Pagination() {\n  const [person, setPerson, personFinal, setPersonFinal, itemsPerPage, setItemsPerPage, numPages, setNumPages, currPageNum, setCurrpageNum] = useContext(AppContext);\n\n  const prevBtnHandler = () => {\n    alert(itemsPerPage);\n    currPageNum <= 0 ? setCurrpageNum(0) : setCurrpageNum(--currPageNum);\n    setPerson(person.slice(currPageNum * 3, 3));\n  };\n\n  const nextBtnHandler = () => {\n    //alert(itemsPerPage)\n    currPageNum == person.length ? setCurrpageNum(numPages) : setCurrpageNum(++currPageNum);\n    setPerson(person.slice(currPageNum * 3, 3));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onClick: () => prevBtnHandler(),\n    value: \"Prev\",\n    width: \"10px\",\n    height: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onClick: \"\",\n    value: `Current Page : ${currPageNum} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onClick: () => nextBtnHandler(),\n    value: \"Next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/media/ted/New Volume1/react exercise/react-full-table-functionality/full-react-table-functionality/src/components/Pagination.js"],"names":["useEffect","React","useState","useContext","AppContext","Pagination","person","setPerson","personFinal","setPersonFinal","itemsPerPage","setItemsPerPage","numPages","setNumPages","currPageNum","setCurrpageNum","prevBtnHandler","alert","slice","nextBtnHandler","length"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,UAAR,QAAyB,WAAzB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAEjC,QAAM,CAACC,MAAD,EAASC,SAAT,EAAoBC,WAApB,EAAiCC,cAAjC,EACFC,YADE,EACYC,eADZ,EAC4BC,QAD5B,EACsCC,WADtC,EACmDC,WADnD,EACgEC,cADhE,IACgFZ,UAAU,CAACC,UAAD,CADhG;;AAGJ,QAAMY,cAAc,GAAC,MAAI;AACrBC,IAAAA,KAAK,CAACP,YAAD,CAAL;AACAI,IAAAA,WAAW,IAAI,CAAf,GAAmBC,cAAc,CAAC,CAAD,CAAjC,GAAuCA,cAAc,CAAC,EAAED,WAAH,CAArD;AACAP,IAAAA,SAAS,CAACD,MAAM,CAACY,KAAP,CAAaJ,WAAW,GAAG,CAA3B,EAA+B,CAA/B,CAAD,CAAT;AAEH,GALD;;AAOA,QAAMK,cAAc,GAAC,MAAI;AACrB;AACAL,IAAAA,WAAW,IAAIR,MAAM,CAACc,MAAtB,GAA+BL,cAAc,CAACH,QAAD,CAA7C,GAA0DG,cAAc,CAAC,EAAED,WAAH,CAAxE;AACAP,IAAAA,SAAS,CAACD,MAAM,CAACY,KAAP,CAAaJ,WAAW,GAAG,CAA3B,EAA+B,CAA/B,CAAD,CAAT;AAEH,GALD;;AAOI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,OAAO,EAAE,MAAIE,cAAc,EAAhD;AAAoD,IAAA,KAAK,EAAC,MAA1D;AAAiE,IAAA,KAAK,EAAC,MAAvE;AAA8E,IAAA,MAAM,EAAC,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,OAAO,EAAC,EAA7B;AAAgC,IAAA,KAAK,EAAG,kBAAiBF,WAAY,GAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,OAAO,EAAE,MAAIK,cAAc,EAAhD;AAAoD,IAAA,KAAK,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH","sourcesContent":["import { useEffect } from \"react\"\nimport React, {useState, useContext} from 'react'\nimport {AppContext} from \"./Context\"\n\nexport default function Pagination() {\n\n    const [person, setPerson, personFinal, setPersonFinal, \n        itemsPerPage, setItemsPerPage,numPages, setNumPages, currPageNum, setCurrpageNum]=useContext(AppContext)\n\nconst prevBtnHandler=()=>{\n    alert(itemsPerPage)\n    currPageNum <= 0 ? setCurrpageNum(0) : setCurrpageNum(--currPageNum)\n    setPerson(person.slice(currPageNum * 3 , 3))\n\n}\n\nconst nextBtnHandler=()=>{\n    //alert(itemsPerPage)\n    currPageNum == person.length ? setCurrpageNum(numPages) : setCurrpageNum(++currPageNum)\n    setPerson(person.slice(currPageNum * 3 , 3))\n\n}\n\n    return (\n        <div>\n            <input type=\"button\" onClick={()=>prevBtnHandler()} value=\"Prev\" width=\"10px\" height=\"10px\"/>\n            <input type=\"button\" onClick=\"\" value={`Current Page : ${currPageNum} ` }/>\n            <input type=\"button\" onClick={()=>nextBtnHandler()} value=\"Next\" />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}